# HTTP-to-NATS Sidecar Dockerfile
# Multi-stage build for optimized production container

# Build stage
FROM rust:1.75 AS builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy Cargo files first for better layer caching
COPY Cargo.toml Cargo.lock ./

# Copy source code
COPY src/ src/

# Build only the sidecar binary
RUN cargo build --release --bin http_to_nats_sidecar

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -r -m -u 1001 -s /bin/bash sidecar

# Create app directory
WORKDIR /opt/sidecar

# Copy built binary from builder stage
COPY --from=builder /app/target/release/http_to_nats_sidecar /opt/sidecar/bin/http_to_nats_sidecar

# Make binary executable
RUN chmod +x /opt/sidecar/bin/http_to_nats_sidecar

# Set ownership
RUN chown -R sidecar:sidecar /opt/sidecar

# Switch to non-root user
USER sidecar

# Environment variables
ENV NATS_URL=nats://nats:4222
ENV HTTP_PORT=8080
ENV RUST_LOG=info

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose HTTP port
EXPOSE 8080

# Default command
CMD ["/opt/sidecar/bin/http_to_nats_sidecar"]
